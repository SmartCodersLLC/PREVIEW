{"version":3,"sources":["Containers/ViewContainer.js","Pages/ViewPage.js"],"names":["ViewContainer","t","useTranslation","useState","filePath","setFilePath","type","setType","error","setError","useEffect","params","URLSearchParams","window","location","search","file","get","url","baseURL","encodeURIComponent","fetch","then","res","status","json","data","message","catch","console","log","notify","className","id","fileType","onError","ViewPage","charSet"],"mappings":"sRAQO,SAASA,IACd,IAAQC,EAAMC,cAAND,EAER,EAAgCE,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAkCA,OA1BAC,qBAAU,WACR,IAAMC,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAC7CC,EAAOL,EAAOM,IAAI,QAClBX,EAAOK,EAAOM,IAAI,QACxB,GAAID,GAAQV,EAAM,CAChB,IAAMY,EAAG,UAAMC,IAAN,8BAAmCC,mBAAmBJ,IAC/DK,MAAMH,GACHI,MAAK,SAACC,GACc,MAAfA,EAAIC,QACNnB,EAAYa,GACZX,EAAQD,IAERiB,EAAIE,OAAOH,MAAK,SAACI,GACfjB,EAASiB,EAAKC,eAInBC,OAAM,SAAUpB,GACfqB,QAAQC,IAAItB,GACZuB,YAAOvB,EAAMmB,QAAS,iBAG1BlB,EAASR,EAAE,yBAEZ,IAEEG,GAAaE,EAWhB,qBAAK0B,UAAU,eAAf,SACE,qBAAKA,UAAU,KAAKC,GAAG,KAAvB,SACGzB,EACC,gCACE,6BAAKP,EAAE,WACP,4BAAIA,EAAE,uBACN,4BAAIO,OAGN,cAAC,IAAD,CACE0B,SAAU5B,EACVF,SAAUA,EACV+B,QAvDV,SAAoB3B,GAClBqB,QAAQC,IAAI,CAAEtB,UACduB,YAAOvB,EAAMmB,QAAS,SACtBlB,EAASD,UA+BP,gCACE,6BAAKP,EAAE,WACP,4BAAIA,EAAE,qBACN,4BAAIO,OC/CG,SAAS4B,IACtB,IAAQnC,EAAMC,cAAND,EACR,OACE,sBAAK+B,UAAU,OAAf,UACE,eAAC,IAAD,WACE,sBAAMK,QAAQ,UACd,kCACGpC,EAAE,aADL,MACsBA,EAAE,uBAG1B,cAACD,EAAD","file":"static/js/7.918c9215.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { notify } from \"../Utils/notify\";\r\n\r\nimport { baseURL } from \"../Service/http\";\r\nimport \"../Styles/UMKContainer.css\";\r\nimport FileViewer from \"react-file-viewer\";\r\n\r\nexport function ViewContainer() {\r\n  const { t } = useTranslation();\r\n\r\n  const [filePath, setFilePath] = useState(null);\r\n  const [type, setType] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  function onErrorFun(error) {\r\n    console.log({ error });\r\n    notify(error.message, \"error\");\r\n    setError(error);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const file = params.get(\"file\");\r\n    const type = params.get(\"type\");\r\n    if (file && type) {\r\n      const url = `${baseURL}/umk/download?file=${encodeURIComponent(file)}`;\r\n      fetch(url)\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            setFilePath(url);\r\n            setType(type);\r\n          } else {\r\n            res.json().then((data) => {\r\n              setError(data.message);\r\n            });\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n          notify(error.message, \"error\");\r\n        });\r\n    } else {\r\n      setError(t(\"umk:view.noChoosen\"));\r\n    }\r\n  }, []);\r\n\r\n  if (!filePath || !type) {\r\n    return (\r\n      <div>\r\n        <h1>{t(\"error\")}</h1>\r\n        <p>{t(\"umk:view.noFile\")}</p>\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"UMKContainer\">\r\n      <div className=\"A4\" id=\"A4\">\r\n        {error ? (\r\n          <div>\r\n            <h1>{t(\"error\")}</h1>\r\n            <p>{t(\"umk:view.notFound\")}</p>\r\n            <p>{error}</p>\r\n          </div>\r\n        ) : (\r\n          <FileViewer\r\n            fileType={type}\r\n            filePath={filePath}\r\n            onError={onErrorFun}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ViewContainer } from \"../Containers/ViewContainer\";\r\n\r\nexport default function ViewPage() {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div className=\"Main\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>\r\n          {t(\"head.view\")} | {t(\"head.appTitle\")}\r\n        </title>\r\n      </Helmet>\r\n      <ViewContainer />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}